"""Init DB

Revision ID: 7ebf5d659897
Revises: 
Create Date: 2021-11-15 12:16:14.964227

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7ebf5d659897'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ingredients',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ingredients')),
    sa.UniqueConstraint('name', name=op.f('uq_ingredients_name'))
    )
    op.create_table('tags',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tags')),
    sa.UniqueConstraint('name', name=op.f('uq_tags_name'))
    )
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=False),
    sa.Column('last_name', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=60), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('profile_photo', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('followers',
    sa.Column('follower_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('following_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name=op.f('fk_followers_follower_id_users')),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], name=op.f('fk_followers_following_id_users'))
    )
    op.create_table('recipes',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.Enum('Easy', 'Medium', 'Hard', name='difficulty'), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('serving', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('image', sa.Text(), nullable=True),
    sa.Column('creator_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], name=op.f('fk_recipes_creator_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipes'))
    )
    op.create_table('bookmarks',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('recipe_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_bookmarks_recipe_id_recipes')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_bookmarks_user_id_users'))
    )
    op.create_table('measurement_details',
    sa.Column('recipe_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('ingredient_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('details', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['ingredient_id'], ['ingredients.id'], name=op.f('fk_measurement_details_ingredient_id_ingredients')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_measurement_details_recipe_id_recipes')),
    sa.PrimaryKeyConstraint('recipe_id', 'ingredient_id', name=op.f('pk_measurement_details'))
    )
    op.create_table('ratings',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('recipe_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('comment', sa.String(length=20000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_ratings_recipe_id_recipes')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_ratings_user_id_users')),
    sa.PrimaryKeyConstraint('user_id', 'recipe_id', name=op.f('pk_ratings'))
    )
    op.create_table('recipe_tags',
    sa.Column('recipe_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('tag_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipes.id'], name=op.f('fk_recipe_tags_recipe_id_recipes')),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], name=op.f('fk_recipe_tags_tag_id_tags'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recipe_tags')
    op.drop_table('ratings')
    op.drop_table('measurement_details')
    op.drop_table('bookmarks')
    op.drop_table('recipes')
    op.drop_table('followers')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('ingredients')
    # ### end Alembic commands ###
